name: Staging CD Pipeline

on:
  push:
    branches:
      - testing

env:
  ACR_LOGIN_SERVER: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
  ACR_NAME: ${{ secrets.AZURE_ACR_NAME }}
  BACKEND_IMAGE: ${{ secrets.AZURE_CONTAINER_REGISTRY }}/backend:${{ github.sha }}
  FRONTEND_IMAGE: ${{ secrets.AZURE_CONTAINER_REGISTRY }}/frontend:${{ github.sha }}

jobs:
  staging:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # --- Login to Azure ---
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # --- Get AKS creds for kubectl & terraform ---
      - name: Get AKS Credentials
        run: az aks get-credentials --resource-group ecom-rg --name ecom-aks --overwrite-existing

      # --- Setup Terraform ---
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform -chdir=infra/staging init

      - name: Terraform Plan
        run: terraform -chdir=infra/staging plan \
             -var="backend_image=${{ env.BACKEND_IMAGE }}" \
             -var="frontend_image=${{ env.FRONTEND_IMAGE }}" \
             -var="run_id=${{ github.run_id }}"

      - name: Terraform Apply - Create Staging Infra
        run: terraform -chdir=infra/staging apply -auto-approve \
             -var="backend_image=${{ env.BACKEND_IMAGE }}" \
             -var="frontend_image=${{ env.FRONTEND_IMAGE }}" \
             -var="run_id=${{ github.run_id }}"

      # --- Debug: Check pods and services ---
      - name: Check Pods
        run: |
          kubectl get pods -A
          kubectl get svc -A

      # --- Simple smoke test ---
      - name: Smoke Test
        continue-on-error: true
        run: |
          echo "Waiting for services..."
          sleep 120
          BACKEND_IP=$(terraform -chdir=infra/staging output -raw backend_url)
          FRONTEND_IP=$(terraform -chdir=infra/staging output -raw frontend_url)
          echo "Backend IP: $BACKEND_IP"
          echo "Frontend IP: $FRONTEND_IP"
          curl -v http://$BACKEND_IP/health || exit 1
          curl -v http://$FRONTEND_IP || exit 1

      # --- Destroy Staging Infra ---
      - name: Terraform Destroy
        if: always()
        run: terraform -chdir=infra/staging destroy -auto-approve \
             -var="backend_image=${{ env.BACKEND_IMAGE }}" \
             -var="frontend_image=${{ env.FRONTEND_IMAGE }}" \
             -var="run_id=${{ github.run_id }}"
